---
name: CI

on:
  schedule:
    - cron: '44 4 */2 * *'
  push:
    branches:
      - "main"
  pull_request:
  repository_dispatch:

jobs:
  format:
    name: Ensure code is black formatted
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install necessary software
        run: |
          set -e
          sudo apt update
          sudo apt -y install jo tox
      - name: Test formatting with black
        run: tox -e format -- --check

  gentestmatrix:
    name: Generate test matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      # jo is used only to generate matrix using json easily
      - name: Install necessary software
        run: sudo apt update && sudo apt install jo tox
      - id: setmatrix
        run: |
          stringified_matrix=$(tox -l | sed -e '/unit/d' -e '/get_urls/d' -e '/doc/d' -e '/lint/d' -e '/fips/d' | jo -a)
          echo "matrix=$stringified_matrix" >> $GITHUB_OUTPUT

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.6", "3.9", "3.10"]
    container:
      image: registry.suse.com/bci/python:${{ matrix.python_version }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install tox
        run: |
          python3 --version
          python3 -m ensurepip
          python3 -m pip install tox
      - run: 'tox -e py$(echo $PY_VER | tr -d . )-unit -- -n auto'
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: 1.2.3
          PY_VER: ${{ matrix.python_version }}

  documentation:
    name: Build the documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install tox
        run: sudo apt update && sudo apt install tox
      - run: tox -e doc

  lint:
    name: Lint the source code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install tox
        run: sudo apt update && sudo apt install tox
      - run: tox -e lint

  test-containers:
    name: Test containers
    runs-on: ubuntu-latest
    needs: gentestmatrix
    strategy:
      fail-fast: false
      matrix:
        toxenv: ${{fromJson(needs.gentestmatrix.outputs.matrix)}}
        container_runtime:
          - DOCKER
          - PODMAN
        os_version:
          - 15.4
        include:
          - toxenv: build
            container_runtime: DOCKER
            os_version: 15.3
          - toxenv: build
            container_runtime: PODMAN
            os_version: 15.3
          - toxenv: base
            container_runtime: DOCKER
            os_version: 15.3
          - toxenv: base
            container_runtime: PODMAN
            os_version: 15.3
          - toxenv: metadata
            container_runtime: DOCKER
            os_version: 15.3
          - toxenv: metadata
            container_runtime: PODMAN
            os_version: 15.3
          - toxenv: all
            container_runtime: DOCKER
            os_version: 15.3
          - toxenv: all
            container_runtime: PODMAN
            os_version: 15.3
          - toxenv: repository
            container_runtime: DOCKER
            os_version: 15.3
          - toxenv: repository
            container_runtime: PODMAN
            os_version: 15.3
          - toxenv: base
            container_runtime: DOCKER
            os_version: 15.5
          - toxenv: base
            container_runtime: PODMAN
            os_version: 15.5
          - toxenv: metadata
            container_runtime: DOCKER
            os_version: 15.5
          - toxenv: metadata
            container_runtime: PODMAN
            os_version: 15.5
          - toxenv: python
            container_runtime: DOCKER
            os_version: 15.5
          - toxenv: python
            container_runtime: PODMAN
            os_version: 15.5

    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install tox
        run: sudo apt update && sudo apt install tox
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install necessary dependencies
        if: ${{ matrix.container_runtime == 'PODMAN' }}
        run: |
          sudo apt update && sudo apt install podman
          sudo mkdir -p /etc/containers/registries.d/
      - name: configure podman to validate sigstore signatures
        if: ${{ matrix.container_runtime == 'PODMAN' }}
        run: |
          cat << EOF | sudo tee /etc/containers/registries.d/opensuse.yaml
          docker:
            registry.opensuse.org:
              sigstore: https://registry.opensuse.org/sigstore
          EOF

          policy_json=$(cat /etc/containers/policy.json)
          echo $policy_json | jq '.transports += { "docker": {"registry.opensuse.org": [{ "type": "signedBy", "keyType": "GPGKeys", "keyPath": "/tmp/devel_bci.key"}]}}' | sudo tee /etc/containers/policy.json

          cat << EOF > /tmp/devel_bci.key
          -----BEGIN PGP PUBLIC KEY BLOCK-----

          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
          hLNKnq/uYWnF2uUesgKloRegdg==
          =L0Kw
          -----END PGP PUBLIC KEY BLOCK-----

      - name: Run tox job
        run: sudo --preserve-env tox -e ${{ matrix.toxenv }} -- -n auto
        env:
          CONTAINER_RUNTIME: ${{ matrix.container_runtime }}
          OS_VERSION: ${{ matrix.os_version }}
